.status.light
  .status__header
    .status__meta
      = link_to time_ago_in_words(status.created_at), TagManager.instance.url_for(status), class: 'status__relative-time u-url u-uid', title: l(status.created_at), target: @external_links ? '_blank' : nil, rel: 'noopener'
      %data.dt-published{ value: status.created_at.to_time.iso8601 }

    = link_to TagManager.instance.url_for(status.account), class: 'status__display-name p-author h-card', target: @external_links ? '_blank' : nil, rel: 'noopener' do
      .status__avatar
        %div
          = image_tag status.account.avatar(:original), width: 48, height: 48, alt: '', class: 'u-photo'
      %span.display-name
        %strong.p-name.emojify= display_name(status.account)
        %span.p-nickname= acct(status.account)

  .status__content.e-content.p-name.emojify<
    - unless status.spoiler_text.blank?
      %p{ style: 'margin-bottom: 0' }<
        %span>= "#{status.spoiler_text} "
        %a.status__content__spoiler-link{ href: '#' }= t('statuses.show_more')
    %div{ style: "display: #{status.spoiler_text.blank? ? 'block' : 'none'}; direction: #{rtl?(status.content) ? 'rtl' : 'ltr'}" }= Formatter.instance.format(status)

  - unless status.media_attachments.empty?
    .status__attachments
      - if status.sensitive?
        = render partial: 'stream_entries/content_spoiler'
      - if status.media_attachments.first.video?
        .status__attachments__inner
          .video-item
            = link_to (status.media_attachments.first.remote_url.blank? ? status.media_attachments.first.file.url(:original) : status.media_attachments.first.remote_url), style: "background-image: url(#{status.media_attachments.first.file.url(:small)})", target: '_blank', rel: 'noopener', class: 'u-video' do
              .video-item__play
                = fa_icon('play')
      - else
        .status__attachments__inner
          - status.media_attachments.each do |media|
            = render partial: 'stream_entries/media', locals: { media: media }
